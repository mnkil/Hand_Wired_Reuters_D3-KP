   1               		.file	"hook.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.hook_layer_change,"ax",@progbits
  12               		.weak	hook_layer_change
  14               	hook_layer_change:
  15               	.LFB3:
  16               		.file 1 "../../tmk_core/common/hook.c"
   1:../../tmk_core/common/hook.c **** /*
   2:../../tmk_core/common/hook.c **** Copyright 2016 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/hook.c **** 
   4:../../tmk_core/common/hook.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/hook.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/hook.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/hook.c **** (at your option) any later version.
   8:../../tmk_core/common/hook.c **** 
   9:../../tmk_core/common/hook.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/hook.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/hook.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/hook.c **** GNU General Public License for more details.
  13:../../tmk_core/common/hook.c **** 
  14:../../tmk_core/common/hook.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/hook.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/hook.c **** */
  17:../../tmk_core/common/hook.c **** 
  18:../../tmk_core/common/hook.c **** #include "keyboard.h"
  19:../../tmk_core/common/hook.c **** #include "hook.h"
  20:../../tmk_core/common/hook.c **** 
  21:../../tmk_core/common/hook.c **** /* -------------------------------------------------
  22:../../tmk_core/common/hook.c ****  * Definitions of hardware-independent default hooks
  23:../../tmk_core/common/hook.c ****  * ------------------------------------------------- */
  24:../../tmk_core/common/hook.c **** 
  25:../../tmk_core/common/hook.c **** /* Called on layer state change event. */
  26:../../tmk_core/common/hook.c **** /* Default behaviour: do nothing. */
  27:../../tmk_core/common/hook.c **** __attribute__((weak))
  28:../../tmk_core/common/hook.c **** void hook_layer_change(uint8_t layer_state) {
  17               		.loc 1 28 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE3:
  28               		.section	.text.hook_keyboard_loop,"ax",@progbits
  29               		.weak	hook_keyboard_loop
  31               	hook_keyboard_loop:
  32               	.LFB4:
  29:../../tmk_core/common/hook.c ****     (void)layer_state;
  30:../../tmk_core/common/hook.c **** }
  31:../../tmk_core/common/hook.c **** 
  32:../../tmk_core/common/hook.c **** /* Called periodically from the matrix scan loop (very often!) */
  33:../../tmk_core/common/hook.c **** /* Default behaviour: do nothing. */
  34:../../tmk_core/common/hook.c **** __attribute__((weak))
  35:../../tmk_core/common/hook.c **** void hook_keyboard_loop(void) {}
  33               		.loc 1 35 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  39 0000 0895      		ret
  40               		.cfi_endproc
  41               	.LFE4:
  43               		.section	.text.hook_matrix_change,"ax",@progbits
  44               		.weak	hook_matrix_change
  46               	hook_matrix_change:
  47               	.LFB5:
  36:../../tmk_core/common/hook.c **** 
  37:../../tmk_core/common/hook.c **** /* Called on matrix state change event (every keypress => often!) */
  38:../../tmk_core/common/hook.c **** /* Default behaviour: do nothing. */
  39:../../tmk_core/common/hook.c **** __attribute__((weak))
  40:../../tmk_core/common/hook.c **** void hook_matrix_change(keyevent_t event) {
  48               		.loc 1 40 0
  49               		.cfi_startproc
  50               		.loc 1 40 0
  51 0000 CF93      		push r28
  52               	.LCFI0:
  53               		.cfi_def_cfa_offset 3
  54               		.cfi_offset 28, -2
  55 0002 DF93      		push r29
  56               	.LCFI1:
  57               		.cfi_def_cfa_offset 4
  58               		.cfi_offset 29, -3
  59 0004 00D0      		rcall .
  60 0006 00D0      		rcall .
  61 0008 1F92      		push __zero_reg__
  62               	.LCFI2:
  63               		.cfi_def_cfa_offset 9
  64 000a CDB7      		in r28,__SP_L__
  65 000c DEB7      		in r29,__SP_H__
  66               	.LCFI3:
  67               		.cfi_def_cfa_register 28
  68               	/* prologue: function */
  69               	/* frame size = 5 */
  70               	/* stack size = 7 */
  71               	.L__stack_usage = 7
  72               	/* epilogue start */
  41:../../tmk_core/common/hook.c **** 	(void)event;
  42:../../tmk_core/common/hook.c **** }
  73               		.loc 1 42 0
  74 000e 0F90      		pop __tmp_reg__
  75 0010 0F90      		pop __tmp_reg__
  76 0012 0F90      		pop __tmp_reg__
  77 0014 0F90      		pop __tmp_reg__
  78 0016 0F90      		pop __tmp_reg__
  79 0018 DF91      		pop r29
  80 001a CF91      		pop r28
  81 001c 0895      		ret
  82               		.cfi_endproc
  83               	.LFE5:
  85               		.section	.text.hook_keyboard_leds_change,"ax",@progbits
  86               		.weak	hook_keyboard_leds_change
  88               	hook_keyboard_leds_change:
  89               	.LFB6:
  43:../../tmk_core/common/hook.c **** 
  44:../../tmk_core/common/hook.c **** /* Called on indicator LED update event (when reported from host). */
  45:../../tmk_core/common/hook.c **** /* Default behaviour: calls led_set (for compatibility). */
  46:../../tmk_core/common/hook.c **** __attribute__((weak))
  47:../../tmk_core/common/hook.c **** void hook_keyboard_leds_change(uint8_t led_status) {
  90               		.loc 1 47 0
  91               		.cfi_startproc
  92               	.LVL1:
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  48:../../tmk_core/common/hook.c ****     keyboard_set_leds(led_status);
  97               		.loc 1 48 0
  98 0000 0C94 0000 		jmp keyboard_set_leds
  99               	.LVL2:
 100               		.cfi_endproc
 101               	.LFE6:
 103               		.section	.text.hook_bootmagic,"ax",@progbits
 104               		.weak	hook_bootmagic
 106               	hook_bootmagic:
 107               	.LFB7:
  49:../../tmk_core/common/hook.c **** }
  50:../../tmk_core/common/hook.c **** 
  51:../../tmk_core/common/hook.c **** /* Called once, on checking the bootmagic combos. */
  52:../../tmk_core/common/hook.c **** /* Default behaviour: do nothing. */
  53:../../tmk_core/common/hook.c **** __attribute__((weak))
  54:../../tmk_core/common/hook.c **** void hook_bootmagic(void) {
 108               		.loc 1 54 0
 109               		.cfi_startproc
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112               	/* stack size = 0 */
 113               	.L__stack_usage = 0
 114 0000 0895      		ret
 115               		.cfi_endproc
 116               	.LFE7:
 118               		.text
 119               	.Letext0:
 120               		.file 2 "c:\\program files (x86)\\mhv avr tools\\avr\\include\\stdint.h"
 121               		.file 3 "../../tmk_core/common/keyboard.h"
DEFINED SYMBOLS
                            *ABS*:00000000 hook.c
C:\msys64\tmp\ccdGmhDH.s:2      *ABS*:0000003e __SP_H__
C:\msys64\tmp\ccdGmhDH.s:3      *ABS*:0000003d __SP_L__
C:\msys64\tmp\ccdGmhDH.s:4      *ABS*:0000003f __SREG__
C:\msys64\tmp\ccdGmhDH.s:5      *ABS*:0000003b __RAMPZ__
C:\msys64\tmp\ccdGmhDH.s:6      *ABS*:00000000 __tmp_reg__
C:\msys64\tmp\ccdGmhDH.s:7      *ABS*:00000001 __zero_reg__
C:\msys64\tmp\ccdGmhDH.s:14     .text.hook_layer_change:00000000 hook_layer_change
C:\msys64\tmp\ccdGmhDH.s:31     .text.hook_keyboard_loop:00000000 hook_keyboard_loop
C:\msys64\tmp\ccdGmhDH.s:46     .text.hook_matrix_change:00000000 hook_matrix_change
C:\msys64\tmp\ccdGmhDH.s:88     .text.hook_keyboard_leds_change:00000000 hook_keyboard_leds_change
C:\msys64\tmp\ccdGmhDH.s:106    .text.hook_bootmagic:00000000 hook_bootmagic

UNDEFINED SYMBOLS
keyboard_set_leds
