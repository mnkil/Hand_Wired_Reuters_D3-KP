   1               		.file	"util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.bitpop,"ax",@progbits
  12               	.global	bitpop
  14               	bitpop:
  15               	.LFB0:
  16               		.file 1 "../../tmk_core/common/util.c"
   1:../../tmk_core/common/util.c **** /*
   2:../../tmk_core/common/util.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/util.c **** 
   4:../../tmk_core/common/util.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/util.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/util.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/util.c **** (at your option) any later version.
   8:../../tmk_core/common/util.c **** 
   9:../../tmk_core/common/util.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/util.c **** GNU General Public License for more details.
  13:../../tmk_core/common/util.c **** 
  14:../../tmk_core/common/util.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/util.c **** */
  17:../../tmk_core/common/util.c **** 
  18:../../tmk_core/common/util.c **** #include "util.h"
  19:../../tmk_core/common/util.c **** 
  20:../../tmk_core/common/util.c **** // bit population - return number of on-bit
  21:../../tmk_core/common/util.c **** uint8_t bitpop(uint8_t bits)
  22:../../tmk_core/common/util.c **** {
  17               		.loc 1 22 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  23:../../tmk_core/common/util.c ****     uint8_t c;
  24:../../tmk_core/common/util.c ****     for (c = 0; bits; c++)
  24               		.loc 1 24 0
  25 0000 90E0      		ldi r25,0
  26               	.LVL1:
  27               	.L2:
  28               		.loc 1 24 0 is_stmt 0 discriminator 1
  29 0002 8823      		tst r24
  30 0004 01F0      		breq .L5
  25:../../tmk_core/common/util.c ****         bits &= bits - 1;
  31               		.loc 1 25 0 is_stmt 1 discriminator 2
  32 0006 2FEF      		ldi r18,lo8(-1)
  33 0008 280F      		add r18,r24
  34 000a 8223      		and r24,r18
  35               	.LVL2:
  24:../../tmk_core/common/util.c ****         bits &= bits - 1;
  36               		.loc 1 24 0 discriminator 2
  37 000c 9F5F      		subi r25,lo8(-(1))
  38               	.LVL3:
  39 000e 00C0      		rjmp .L2
  40               	.L5:
  26:../../tmk_core/common/util.c ****     return c;
  27:../../tmk_core/common/util.c **** /*
  28:../../tmk_core/common/util.c ****     const uint8_t bit_count[] = { 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 };
  29:../../tmk_core/common/util.c ****     return bit_count[bits>>4] + bit_count[bits&0x0F]
  30:../../tmk_core/common/util.c **** */
  31:../../tmk_core/common/util.c **** }
  41               		.loc 1 31 0
  42 0010 892F      		mov r24,r25
  43               	.LVL4:
  44 0012 0895      		ret
  45               		.cfi_endproc
  46               	.LFE0:
  48               		.section	.text.bitpop16,"ax",@progbits
  49               	.global	bitpop16
  51               	bitpop16:
  52               	.LFB1:
  32:../../tmk_core/common/util.c **** 
  33:../../tmk_core/common/util.c **** uint8_t bitpop16(uint16_t bits)
  34:../../tmk_core/common/util.c **** {
  53               		.loc 1 34 0
  54               		.cfi_startproc
  55               	.LVL5:
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 0 */
  59               	.L__stack_usage = 0
  35:../../tmk_core/common/util.c ****     uint8_t c;
  36:../../tmk_core/common/util.c ****     for (c = 0; bits; c++)
  60               		.loc 1 36 0
  61 0000 40E0      		ldi r20,0
  62               	.LVL6:
  63               	.L7:
  64               		.loc 1 36 0 is_stmt 0 discriminator 1
  65 0002 0097      		sbiw r24,0
  66 0004 01F0      		breq .L9
  37:../../tmk_core/common/util.c ****         bits &= bits - 1;
  67               		.loc 1 37 0 is_stmt 1 discriminator 2
  68 0006 9C01      		movw r18,r24
  69 0008 2150      		subi r18,1
  70 000a 3109      		sbc r19,__zero_reg__
  71 000c 8223      		and r24,r18
  72 000e 9323      		and r25,r19
  73               	.LVL7:
  36:../../tmk_core/common/util.c ****         bits &= bits - 1;
  74               		.loc 1 36 0 discriminator 2
  75 0010 4F5F      		subi r20,lo8(-(1))
  76               	.LVL8:
  77 0012 00C0      		rjmp .L7
  78               	.L9:
  38:../../tmk_core/common/util.c ****     return c;
  39:../../tmk_core/common/util.c **** }
  79               		.loc 1 39 0
  80 0014 842F      		mov r24,r20
  81               	.LVL9:
  82 0016 0895      		ret
  83               		.cfi_endproc
  84               	.LFE1:
  86               		.section	.text.bitpop32,"ax",@progbits
  87               	.global	bitpop32
  89               	bitpop32:
  90               	.LFB2:
  40:../../tmk_core/common/util.c **** 
  41:../../tmk_core/common/util.c **** uint8_t bitpop32(uint32_t bits)
  42:../../tmk_core/common/util.c **** {
  91               		.loc 1 42 0
  92               		.cfi_startproc
  93               	.LVL10:
  94 0000 0F93      		push r16
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 16, -2
  98 0002 1F93      		push r17
  99               	.LCFI1:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 17, -3
 102               	/* prologue: function */
 103               	/* frame size = 0 */
 104               	/* stack size = 2 */
 105               	.L__stack_usage = 2
 106               	.LVL11:
  43:../../tmk_core/common/util.c ****     uint8_t c;
  44:../../tmk_core/common/util.c ****     for (c = 0; bits; c++)
 107               		.loc 1 44 0
 108 0004 40E0      		ldi r20,0
 109               	.LVL12:
 110               	.L11:
 111               		.loc 1 44 0 is_stmt 0 discriminator 1
 112 0006 6115      		cp r22,__zero_reg__
 113 0008 7105      		cpc r23,__zero_reg__
 114 000a 8105      		cpc r24,__zero_reg__
 115 000c 9105      		cpc r25,__zero_reg__
 116 000e 01F0      		breq .L13
  45:../../tmk_core/common/util.c ****         bits &= bits - 1;
 117               		.loc 1 45 0 is_stmt 1 discriminator 2
 118 0010 8B01      		movw r16,r22
 119 0012 9C01      		movw r18,r24
 120 0014 0150      		subi r16,1
 121 0016 1109      		sbc r17,__zero_reg__
 122 0018 2109      		sbc r18,__zero_reg__
 123 001a 3109      		sbc r19,__zero_reg__
 124 001c 6023      		and r22,r16
 125 001e 7123      		and r23,r17
 126 0020 8223      		and r24,r18
 127 0022 9323      		and r25,r19
 128               	.LVL13:
  44:../../tmk_core/common/util.c ****         bits &= bits - 1;
 129               		.loc 1 44 0 discriminator 2
 130 0024 4F5F      		subi r20,lo8(-(1))
 131               	.LVL14:
 132 0026 00C0      		rjmp .L11
 133               	.L13:
  46:../../tmk_core/common/util.c ****     return c;
  47:../../tmk_core/common/util.c **** }
 134               		.loc 1 47 0
 135 0028 842F      		mov r24,r20
 136               	/* epilogue start */
 137 002a 1F91      		pop r17
 138 002c 0F91      		pop r16
 139 002e 0895      		ret
 140               		.cfi_endproc
 141               	.LFE2:
 143               		.section	.text.biton,"ax",@progbits
 144               	.global	biton
 146               	biton:
 147               	.LFB3:
  48:../../tmk_core/common/util.c **** 
  49:../../tmk_core/common/util.c **** // most significant on-bit - return highest location of on-bit
  50:../../tmk_core/common/util.c **** // NOTE: return 0 when bit0 is on or all bits are off
  51:../../tmk_core/common/util.c **** uint8_t biton(uint8_t bits)
  52:../../tmk_core/common/util.c **** {
 148               		.loc 1 52 0
 149               		.cfi_startproc
 150               	.LVL15:
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 0 */
 154               	.L__stack_usage = 0
  53:../../tmk_core/common/util.c ****     uint8_t n = 0;
  54:../../tmk_core/common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 155               		.loc 1 54 0
 156 0000 982F      		mov r25,r24
 157 0002 9295      		swap r25
 158 0004 9F70      		andi r25,lo8(15)
 159 0006 01F4      		brne .L18
 160 0008 982F      		mov r25,r24
  53:../../tmk_core/common/util.c ****     uint8_t n = 0;
 161               		.loc 1 53 0
 162 000a 80E0      		ldi r24,0
 163               	.LVL16:
 164 000c 00C0      		rjmp .L15
 165               	.LVL17:
 166               	.L18:
 167               		.loc 1 54 0
 168 000e 84E0      		ldi r24,lo8(4)
 169               	.LVL18:
 170               	.L15:
  55:../../tmk_core/common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 171               		.loc 1 55 0
 172 0010 292F      		mov r18,r25
 173 0012 2695      		lsr r18
 174 0014 2695      		lsr r18
 175 0016 01F0      		breq .L16
 176               	.LVL19:
 177               		.loc 1 55 0 is_stmt 0 discriminator 1
 178 0018 8E5F      		subi r24,lo8(-(2))
 179               	.LVL20:
 180 001a 922F      		mov r25,r18
 181               	.LVL21:
 182               	.L16:
  56:../../tmk_core/common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 183               		.loc 1 56 0 is_stmt 1
 184 001c 9695      		lsr r25
 185 001e 01F0      		breq .L17
 186               		.loc 1 56 0 is_stmt 0 discriminator 1
 187 0020 8F5F      		subi r24,lo8(-(1))
 188               	.LVL22:
 189               	.L17:
  57:../../tmk_core/common/util.c ****     return n;
  58:../../tmk_core/common/util.c **** }
 190               		.loc 1 58 0 is_stmt 1
 191 0022 0895      		ret
 192               		.cfi_endproc
 193               	.LFE3:
 195               		.section	.text.biton16,"ax",@progbits
 196               	.global	biton16
 198               	biton16:
 199               	.LFB4:
  59:../../tmk_core/common/util.c **** 
  60:../../tmk_core/common/util.c **** uint8_t biton16(uint16_t bits)
  61:../../tmk_core/common/util.c **** {
 200               		.loc 1 61 0
 201               		.cfi_startproc
 202               	.LVL23:
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 205               	/* stack size = 0 */
 206               	.L__stack_usage = 0
  62:../../tmk_core/common/util.c ****     uint8_t n = 0;
  63:../../tmk_core/common/util.c ****     if (bits >> 8) { bits >>= 8; n += 8;}
 207               		.loc 1 63 0
 208 0000 292F      		mov r18,r25
 209 0002 30E0      		ldi r19,0
 210 0004 2115      		cp r18,__zero_reg__
 211 0006 3105      		cpc r19,__zero_reg__
 212 0008 01F4      		brne .L30
 213 000a 9C01      		movw r18,r24
  62:../../tmk_core/common/util.c ****     uint8_t n = 0;
 214               		.loc 1 62 0
 215 000c 80E0      		ldi r24,0
 216               	.LVL24:
 217 000e 00C0      		rjmp .L26
 218               	.LVL25:
 219               	.L30:
 220               		.loc 1 63 0
 221 0010 88E0      		ldi r24,lo8(8)
 222               	.LVL26:
 223               	.L26:
  64:../../tmk_core/common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 224               		.loc 1 64 0
 225 0012 A901      		movw r20,r18
 226 0014 74E0      		ldi r23,4
 227               		1:
 228 0016 5695      		lsr r21
 229 0018 4795      		ror r20
 230 001a 7A95      		dec r23
 231 001c 01F4      		brne 1b
 232 001e 4115      		cp r20,__zero_reg__
 233 0020 5105      		cpc r21,__zero_reg__
 234 0022 01F0      		breq .L27
 235               	.LVL27:
 236               		.loc 1 64 0 is_stmt 0 discriminator 1
 237 0024 8C5F      		subi r24,lo8(-(4))
 238               	.LVL28:
 239 0026 9A01      		movw r18,r20
 240               	.LVL29:
 241               	.L27:
  65:../../tmk_core/common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 242               		.loc 1 65 0 is_stmt 1
 243 0028 A901      		movw r20,r18
 244 002a 5695      		lsr r21
 245 002c 4795      		ror r20
 246 002e 5695      		lsr r21
 247 0030 4795      		ror r20
 248 0032 4115      		cp r20,__zero_reg__
 249 0034 5105      		cpc r21,__zero_reg__
 250 0036 01F0      		breq .L28
 251               	.LVL30:
 252               		.loc 1 65 0 is_stmt 0 discriminator 1
 253 0038 8E5F      		subi r24,lo8(-(2))
 254               	.LVL31:
 255 003a 9A01      		movw r18,r20
 256               	.LVL32:
 257               	.L28:
  66:../../tmk_core/common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 258               		.loc 1 66 0 is_stmt 1
 259 003c 3695      		lsr r19
 260 003e 2795      		ror r18
 261 0040 232B      		or r18,r19
 262 0042 01F0      		breq .L29
 263               		.loc 1 66 0 is_stmt 0 discriminator 1
 264 0044 8F5F      		subi r24,lo8(-(1))
 265               	.LVL33:
 266               	.L29:
  67:../../tmk_core/common/util.c ****     return n;
  68:../../tmk_core/common/util.c **** }
 267               		.loc 1 68 0 is_stmt 1
 268 0046 0895      		ret
 269               		.cfi_endproc
 270               	.LFE4:
 272               		.section	.text.biton32,"ax",@progbits
 273               	.global	biton32
 275               	biton32:
 276               	.LFB5:
  69:../../tmk_core/common/util.c **** 
  70:../../tmk_core/common/util.c **** uint8_t biton32(uint32_t bits)
  71:../../tmk_core/common/util.c **** {
 277               		.loc 1 71 0
 278               		.cfi_startproc
 279               	.LVL34:
 280 0000 CF92      		push r12
 281               	.LCFI2:
 282               		.cfi_def_cfa_offset 3
 283               		.cfi_offset 12, -2
 284 0002 DF92      		push r13
 285               	.LCFI3:
 286               		.cfi_def_cfa_offset 4
 287               		.cfi_offset 13, -3
 288 0004 EF92      		push r14
 289               	.LCFI4:
 290               		.cfi_def_cfa_offset 5
 291               		.cfi_offset 14, -4
 292 0006 FF92      		push r15
 293               	.LCFI5:
 294               		.cfi_def_cfa_offset 6
 295               		.cfi_offset 15, -5
 296 0008 0F93      		push r16
 297               	.LCFI6:
 298               		.cfi_def_cfa_offset 7
 299               		.cfi_offset 16, -6
 300 000a 1F93      		push r17
 301               	.LCFI7:
 302               		.cfi_def_cfa_offset 8
 303               		.cfi_offset 17, -7
 304               	/* prologue: function */
 305               	/* frame size = 0 */
 306               	/* stack size = 6 */
 307               	.L__stack_usage = 6
 308               	.LVL35:
  72:../../tmk_core/common/util.c ****     uint8_t n = 0;
  73:../../tmk_core/common/util.c ****     if (bits >>16) { bits >>=16; n +=16;}
 309               		.loc 1 73 0
 310 000c 6C01      		movw r12,r24
 311 000e EE24      		clr r14
 312 0010 FF24      		clr r15
 313 0012 C114      		cp r12,__zero_reg__
 314 0014 D104      		cpc r13,__zero_reg__
 315 0016 E104      		cpc r14,__zero_reg__
 316 0018 F104      		cpc r15,__zero_reg__
 317 001a 01F4      		brne .L46
 318 001c 6B01      		movw r12,r22
 319 001e 7C01      		movw r14,r24
  72:../../tmk_core/common/util.c ****     uint8_t n = 0;
 320               		.loc 1 72 0
 321 0020 80E0      		ldi r24,0
 322 0022 00C0      		rjmp .L41
 323               	.L46:
 324               		.loc 1 73 0
 325 0024 80E1      		ldi r24,lo8(16)
 326               	.L41:
 327               	.LVL36:
  74:../../tmk_core/common/util.c ****     if (bits >> 8) { bits >>= 8; n += 8;}
 328               		.loc 1 74 0
 329 0026 3327      		clr r19
 330 0028 2F2D      		mov r18,r15
 331 002a 1E2D      		mov r17,r14
 332 002c 0D2D      		mov r16,r13
 333 002e 0115      		cp r16,__zero_reg__
 334 0030 1105      		cpc r17,__zero_reg__
 335 0032 2105      		cpc r18,__zero_reg__
 336 0034 3105      		cpc r19,__zero_reg__
 337 0036 01F0      		breq .L42
 338               	.LVL37:
 339               		.loc 1 74 0 is_stmt 0 discriminator 1
 340 0038 885F      		subi r24,lo8(-(8))
 341               	.LVL38:
 342 003a 6801      		movw r12,r16
 343 003c 7901      		movw r14,r18
 344               	.LVL39:
 345               	.L42:
  75:../../tmk_core/common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 346               		.loc 1 75 0 is_stmt 1
 347 003e 9701      		movw r18,r14
 348 0040 8601      		movw r16,r12
 349 0042 A4E0      		ldi r26,4
 350               		1:
 351 0044 3695      		lsr r19
 352 0046 2795      		ror r18
 353 0048 1795      		ror r17
 354 004a 0795      		ror r16
 355 004c AA95      		dec r26
 356 004e 01F4      		brne 1b
 357 0050 0115      		cp r16,__zero_reg__
 358 0052 1105      		cpc r17,__zero_reg__
 359 0054 2105      		cpc r18,__zero_reg__
 360 0056 3105      		cpc r19,__zero_reg__
 361 0058 01F0      		breq .L43
 362               	.LVL40:
 363               		.loc 1 75 0 is_stmt 0 discriminator 1
 364 005a 8C5F      		subi r24,lo8(-(4))
 365               	.LVL41:
 366 005c 6801      		movw r12,r16
 367 005e 7901      		movw r14,r18
 368               	.LVL42:
 369               	.L43:
  76:../../tmk_core/common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 370               		.loc 1 76 0 is_stmt 1
 371 0060 9701      		movw r18,r14
 372 0062 8601      		movw r16,r12
 373 0064 F2E0      		ldi r31,2
 374               		1:
 375 0066 3695      		lsr r19
 376 0068 2795      		ror r18
 377 006a 1795      		ror r17
 378 006c 0795      		ror r16
 379 006e FA95      		dec r31
 380 0070 01F4      		brne 1b
 381 0072 0115      		cp r16,__zero_reg__
 382 0074 1105      		cpc r17,__zero_reg__
 383 0076 2105      		cpc r18,__zero_reg__
 384 0078 3105      		cpc r19,__zero_reg__
 385 007a 01F0      		breq .L44
 386               	.LVL43:
 387               		.loc 1 76 0 is_stmt 0 discriminator 1
 388 007c 8E5F      		subi r24,lo8(-(2))
 389               	.LVL44:
 390 007e 6801      		movw r12,r16
 391 0080 7901      		movw r14,r18
 392               	.LVL45:
 393               	.L44:
  77:../../tmk_core/common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 394               		.loc 1 77 0 is_stmt 1
 395 0082 B701      		movw r22,r14
 396 0084 A601      		movw r20,r12
 397 0086 7695      		lsr r23
 398 0088 6795      		ror r22
 399 008a 5795      		ror r21
 400 008c 4795      		ror r20
 401 008e 452B      		or r20,r21
 402 0090 462B      		or r20,r22
 403 0092 472B      		or r20,r23
 404 0094 01F0      		breq .L45
 405               	.LVL46:
 406               		.loc 1 77 0 is_stmt 0 discriminator 1
 407 0096 8F5F      		subi r24,lo8(-(1))
 408               	.LVL47:
 409               	.L45:
 410               	/* epilogue start */
  78:../../tmk_core/common/util.c ****     return n;
  79:../../tmk_core/common/util.c **** }
 411               		.loc 1 79 0 is_stmt 1
 412 0098 1F91      		pop r17
 413 009a 0F91      		pop r16
 414 009c FF90      		pop r15
 415 009e EF90      		pop r14
 416 00a0 DF90      		pop r13
 417 00a2 CF90      		pop r12
 418 00a4 0895      		ret
 419               		.cfi_endproc
 420               	.LFE5:
 422               		.section	.text.bitrev,"ax",@progbits
 423               	.global	bitrev
 425               	bitrev:
 426               	.LFB6:
  80:../../tmk_core/common/util.c **** 
  81:../../tmk_core/common/util.c **** 
  82:../../tmk_core/common/util.c **** 
  83:../../tmk_core/common/util.c **** uint8_t bitrev(uint8_t bits)
  84:../../tmk_core/common/util.c **** {
 427               		.loc 1 84 0
 428               		.cfi_startproc
 429               	.LVL48:
 430               	/* prologue: function */
 431               	/* frame size = 0 */
 432               	/* stack size = 0 */
 433               	.L__stack_usage = 0
  85:../../tmk_core/common/util.c ****     bits = (bits & 0x0f)<<4 | (bits & 0xf0)>>4;
 434               		.loc 1 85 0
 435 0000 8295      		swap r24
 436               	.LVL49:
  86:../../tmk_core/common/util.c ****     bits = (bits & 0b00110011)<<2 | (bits & 0b11001100)>>2;
 437               		.loc 1 86 0
 438 0002 982F      		mov r25,r24
 439 0004 9C7C      		andi r25,lo8(-52)
 440 0006 9695      		lsr r25
 441 0008 9695      		lsr r25
 442 000a 8373      		andi r24,lo8(51)
 443               	.LVL50:
 444 000c 44E0      		ldi r20,lo8(4)
 445 000e 849F      		mul r24,r20
 446 0010 9001      		movw r18,r0
 447 0012 1124      		clr __zero_reg__
 448 0014 922B      		or r25,r18
 449               	.LVL51:
  87:../../tmk_core/common/util.c ****     bits = (bits & 0b01010101)<<1 | (bits & 0b10101010)>>1;
 450               		.loc 1 87 0
 451 0016 892F      		mov r24,r25
 452 0018 8A7A      		andi r24,lo8(-86)
 453 001a 8695      		lsr r24
 454 001c 9575      		andi r25,lo8(85)
 455               	.LVL52:
 456 001e 990F      		lsl r25
 457               	.LVL53:
  88:../../tmk_core/common/util.c ****     return bits;
  89:../../tmk_core/common/util.c **** }
 458               		.loc 1 89 0
 459 0020 892B      		or r24,r25
 460               	.LVL54:
 461 0022 0895      		ret
 462               		.cfi_endproc
 463               	.LFE6:
 465               		.section	.text.bitrev16,"ax",@progbits
 466               	.global	bitrev16
 468               	bitrev16:
 469               	.LFB7:
  90:../../tmk_core/common/util.c **** 
  91:../../tmk_core/common/util.c **** uint16_t bitrev16(uint16_t bits)
  92:../../tmk_core/common/util.c **** {
 470               		.loc 1 92 0
 471               		.cfi_startproc
 472               	.LVL55:
 473 0000 1F93      		push r17
 474               	.LCFI8:
 475               		.cfi_def_cfa_offset 3
 476               		.cfi_offset 17, -2
 477 0002 CF93      		push r28
 478               	.LCFI9:
 479               		.cfi_def_cfa_offset 4
 480               		.cfi_offset 28, -3
 481 0004 DF93      		push r29
 482               	.LCFI10:
 483               		.cfi_def_cfa_offset 5
 484               		.cfi_offset 29, -4
 485 0006 1F92      		push __zero_reg__
 486               	.LCFI11:
 487               		.cfi_def_cfa_offset 6
 488 0008 CDB7      		in r28,__SP_L__
 489 000a DEB7      		in r29,__SP_H__
 490               	.LCFI12:
 491               		.cfi_def_cfa_register 28
 492               	/* prologue: function */
 493               	/* frame size = 1 */
 494               	/* stack size = 4 */
 495               	.L__stack_usage = 4
  93:../../tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff)<<8 | bitrev((bits & 0xff00)>>8);
 496               		.loc 1 93 0
 497 000c 9983      		std Y+1,r25
 498 000e 0E94 0000 		call bitrev
 499               	.LVL56:
 500 0012 182F      		mov r17,r24
 501 0014 9981      		ldd r25,Y+1
 502 0016 892F      		mov r24,r25
 503 0018 0E94 0000 		call bitrev
 504               	.LVL57:
 505 001c 212F      		mov r18,r17
 506 001e 30E0      		ldi r19,0
 507 0020 322F      		mov r19,r18
 508 0022 2227      		clr r18
  94:../../tmk_core/common/util.c ****     return bits;
  95:../../tmk_core/common/util.c **** }
 509               		.loc 1 95 0
 510 0024 A901      		movw r20,r18
 511 0026 482B      		or r20,r24
 512 0028 CA01      		movw r24,r20
 513               	.LVL58:
 514               	/* epilogue start */
 515 002a 0F90      		pop __tmp_reg__
 516 002c DF91      		pop r29
 517 002e CF91      		pop r28
 518 0030 1F91      		pop r17
 519 0032 0895      		ret
 520               		.cfi_endproc
 521               	.LFE7:
 523               		.section	.text.bitrev32,"ax",@progbits
 524               	.global	bitrev32
 526               	bitrev32:
 527               	.LFB8:
  96:../../tmk_core/common/util.c **** 
  97:../../tmk_core/common/util.c **** uint32_t bitrev32(uint32_t bits)
  98:../../tmk_core/common/util.c **** {
 528               		.loc 1 98 0
 529               		.cfi_startproc
 530               	.LVL59:
 531 0000 CF92      		push r12
 532               	.LCFI13:
 533               		.cfi_def_cfa_offset 3
 534               		.cfi_offset 12, -2
 535 0002 DF92      		push r13
 536               	.LCFI14:
 537               		.cfi_def_cfa_offset 4
 538               		.cfi_offset 13, -3
 539 0004 EF92      		push r14
 540               	.LCFI15:
 541               		.cfi_def_cfa_offset 5
 542               		.cfi_offset 14, -4
 543 0006 FF92      		push r15
 544               	.LCFI16:
 545               		.cfi_def_cfa_offset 6
 546               		.cfi_offset 15, -5
 547 0008 CF93      		push r28
 548               	.LCFI17:
 549               		.cfi_def_cfa_offset 7
 550               		.cfi_offset 28, -6
 551 000a DF93      		push r29
 552               	.LCFI18:
 553               		.cfi_def_cfa_offset 8
 554               		.cfi_offset 29, -7
 555               	/* prologue: function */
 556               	/* frame size = 0 */
 557               	/* stack size = 6 */
 558               	.L__stack_usage = 6
 559 000c 6B01      		movw r12,r22
 560 000e 7C01      		movw r14,r24
  99:../../tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff)<<16 | bitrev16((bits & 0xffff0000)>>16);
 561               		.loc 1 99 0
 562 0010 CB01      		movw r24,r22
 563 0012 0E94 0000 		call bitrev16
 564               	.LVL60:
 565 0016 EC01      		movw r28,r24
 566 0018 C701      		movw r24,r14
 567 001a 0E94 0000 		call bitrev16
 568               	.LVL61:
 569 001e 6C01      		movw r12,r24
 570               	.LVL62:
 571 0020 CE01      		movw r24,r28
 572 0022 A0E0      		ldi r26,0
 573 0024 B0E0      		ldi r27,0
 574 0026 7727      		clr r23
 575 0028 6627      		clr r22
 576 002a E12C      		mov r14,__zero_reg__
 577 002c F12C      		mov r15,__zero_reg__
 578 002e 6C29      		or r22,r12
 579 0030 7D29      		or r23,r13
 580 0032 8E29      		or r24,r14
 581 0034 9F29      		or r25,r15
 582               	/* epilogue start */
 100:../../tmk_core/common/util.c ****     return bits;
 101:../../tmk_core/common/util.c **** }
 583               		.loc 1 101 0
 584 0036 DF91      		pop r29
 585 0038 CF91      		pop r28
 586               	.LVL63:
 587 003a FF90      		pop r15
 588 003c EF90      		pop r14
 589 003e DF90      		pop r13
 590 0040 CF90      		pop r12
 591               	.LVL64:
 592 0042 0895      		ret
 593               		.cfi_endproc
 594               	.LFE8:
 596               		.text
 597               	.Letext0:
 598               		.file 2 "c:\\program files (x86)\\mhv avr tools\\avr\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 util.c
C:\msys64\tmp\ccjzQv0m.s:2      *ABS*:0000003e __SP_H__
C:\msys64\tmp\ccjzQv0m.s:3      *ABS*:0000003d __SP_L__
C:\msys64\tmp\ccjzQv0m.s:4      *ABS*:0000003f __SREG__
C:\msys64\tmp\ccjzQv0m.s:5      *ABS*:0000003b __RAMPZ__
C:\msys64\tmp\ccjzQv0m.s:6      *ABS*:00000000 __tmp_reg__
C:\msys64\tmp\ccjzQv0m.s:7      *ABS*:00000001 __zero_reg__
C:\msys64\tmp\ccjzQv0m.s:14     .text.bitpop:00000000 bitpop
C:\msys64\tmp\ccjzQv0m.s:51     .text.bitpop16:00000000 bitpop16
C:\msys64\tmp\ccjzQv0m.s:89     .text.bitpop32:00000000 bitpop32
C:\msys64\tmp\ccjzQv0m.s:146    .text.biton:00000000 biton
C:\msys64\tmp\ccjzQv0m.s:198    .text.biton16:00000000 biton16
C:\msys64\tmp\ccjzQv0m.s:275    .text.biton32:00000000 biton32
C:\msys64\tmp\ccjzQv0m.s:425    .text.bitrev:00000000 bitrev
C:\msys64\tmp\ccjzQv0m.s:468    .text.bitrev16:00000000 bitrev16
C:\msys64\tmp\ccjzQv0m.s:526    .text.bitrev32:00000000 bitrev32

NO UNDEFINED SYMBOLS
